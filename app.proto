syntax = "proto3";
package sinopac_forwarder;
option go_package = "./pb";

enum WSType {
    TYPE_FUTURE_TICK         = 0;
    TYPE_FUTURE_ORDER        = 1;
    TYPE_PERIOD_TRADE_VOLUME = 2;
    TYPE_TRADE_INDEX         = 3;
    TYPE_FUTURE_POSITION     = 4;
    TYPE_ASSIST_STATUS       = 5;
    TYPE_ERR_MESSAGE         = 6;
    TYPE_KBAR_ARR            = 7;
}

message WSMessage {
    WSType type = 1;
    oneof data {
        WSFutureTick future_tick                = 2;
        WSFutureOrder future_order              = 3;
        WSPeriodTradeVolume period_trade_volume = 4;
        WSTradeIndex trade_index                = 5;
        WSFuturePosition future_position        = 6;
        WSAssitStatus assit_status              = 7;
        WSErrMessage err_message                = 8;
        WSHistoryKbarMessage history_kbar       = 9;
    }
}

message WSErrMessage {
    int64 err_code  = 1;
    string response = 2;
}

message WSFutureOrder {
    string code        = 1;
    WSOrder base_order = 2;
}

message WSOrder {
    string order_id   = 1;
    int64 status      = 2;
    string order_time = 3;
    int64 action      = 4;
    double price      = 5;
    int64 quantity    = 6;
    string trade_time = 7;
    string tick_time  = 8;
    string group_id   = 9;
}

message WSFutureTick {
    string code              = 1;
    string tick_time         = 2;
    double open              = 3;
    double underlying_price  = 4;
    int64 bid_side_total_vol = 5;
    int64 ask_side_total_vol = 6;
    double avg_price         = 7;
    double close             = 8;
    double high              = 9;
    double low               = 10;
    double amount            = 11;
    double total_amount      = 12;
    int64 volume             = 13;
    int64 total_volume       = 14;
    int64 tick_type          = 15;
    int64 chg_type           = 16;
    double price_chg         = 17;
    double pct_chg           = 18;
}

message OutInVolume {
    int64 out_volume = 1;
    int64 in_volume  = 2;
}

message WSPeriodTradeVolume {
    OutInVolume first_period  = 1;
    OutInVolume second_period = 2;
    OutInVolume third_period  = 3;
    OutInVolume fourth_period = 4;
}

message WSTradeIndex {
    WSStockSnapShot tse = 1;
    WSStockSnapShot otc = 2;
    WSYahooPrice nasdaq = 3;
    WSYahooPrice nf     = 4;
}

message WSStockSnapShot {
    string stock_num        = 1;
    string stock_name       = 2;
    string snap_time        = 3;
    double open             = 4;
    double high             = 5;
    double low              = 6;
    double close            = 7;
    string tick_type        = 8;
    double price_chg        = 9;
    double pct_chg          = 10;
    string chg_type         = 11;
    int64 volume            = 12;
    int64 volume_sum        = 13;
    int64 amount            = 14;
    int64 amount_sum        = 15;
    double yesterday_volume = 16;
    double volume_ratio     = 17;
}

message WSYahooPrice {
    double last       = 1;
    double price      = 2;
    string updated_at = 3;
}

message WSFuturePosition {
    repeated Position position = 1;
}

message Position {
    string code       = 1;
    string direction  = 2;
    int64 quantity    = 3;
    double price      = 4;
    double last_price = 5;
    double pnl        = 6;
}

message WSAssitStatus {
    bool running = 1;
}

message WSHistoryKbarMessage {
    int64 ts     = 1;
    double close = 2;
    double open  = 3;
    double high  = 4;
    double low   = 5;
    int64 volume = 6;
    string code  = 7;
}
