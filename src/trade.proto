syntax = "proto3";

package toc_machine_trading;

option go_package = "pkg/pb";

service ToCSinopacBackEnd {
    rpc HealthCheck(Echo) returns (Echo) {}

    rpc GetAllStockDetail(RequestTime) returns (StockDetailResponse) {}
    rpc GetAllStockSnapshot(RequestTime) returns (StockSnapshotResponse) {}
    rpc GetStockSnapshotTSE(RequestTime) returns (StockSnapshotResponse) {}

    rpc GetStockSnapshotByNumArr(StockNumArr) returns (StockSnapshotResponse) {}
    rpc GetStockHistoryTick(StockNum) returns (StockHistoryTickResponse) {}
}

message RequestTime {
    int64 timestamp = 1;
}

message Echo {
    string message = 1;
}

message StockDetailResponse {
    repeated StockDetailMessage stock = 1;
    int64 req_timestamp               = 2;
}

message StockDetailMessage {
    string exchange    = 1;
    string category    = 2;
    string code        = 3;
    string name        = 4;
    double reference   = 5;
    string update_date = 6;
    string day_trade   = 7;
}

message StockSnapshotResponse {
    repeated StockSnapshotMessage data = 1;
    int64 req_timestamp                = 2;
}

message StockSnapshotMessage {
    int64 ts                = 1;
    string code             = 2;
    string exchange         = 3;
    double open             = 4;
    double high             = 5;
    double low              = 6;
    double close            = 7;
    string tick_type        = 8;
    double change_price     = 9;
    double change_rate      = 10;
    string change_type      = 11;
    double average_price    = 12;
    int64 volume            = 13;
    int64 total_volume      = 14;
    int64 amount            = 15;
    int64 total_amount      = 16;
    double yesterday_volume = 17;
    double buy_price        = 18;
    double buy_volume       = 19;
    double sell_price       = 20;
    int64 sell_volume       = 21;
    double volume_ratio     = 22;
}

message StockNumArr {
    int64 timestamp               = 1;
    repeated string stock_num_arr = 2;
}

message StockNum {
    int64 timestamp  = 1;
    string stock_num = 2;
}

message StockHistoryTickResponse {
    string stock_num                      = 1;
    string date                           = 2;
    repeated StockHistoryTickMessage data = 3;
    int64 req_timestamp                   = 4;
}

message StockHistoryTickMessage {
    int64 ts         = 1;
    double close     = 2;
    int64 volume     = 3;
    double bid_price = 4;
    int64 bid_volume = 5;
    double ask_price = 6;
    int64 ask_volume = 7;
    int64 tick_type  = 8;
}
